{
    "sourceFile": "src/components/pages/auth/Login.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1739105034451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739105737209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from \"react\";\r\n import { Link } from \"react-router-dom\";\r\n-import { auth, googleProvider, facebookProvider } from \"../../firebaseConfig\";\r\n+import { auth, googleProvider, facebookProvider } from \"../../../firebaseConfig\";\r\n import { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n"
                },
                {
                    "date": 1739108641801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import React, { useState } from \"react\";\r\n+import { supabase } from \"../../supabaseConfig\";\r\n import { Link } from \"react-router-dom\";\r\n-import { auth, googleProvider, facebookProvider } from \"../../../firebaseConfig\";\r\n-import { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n@@ -10,47 +9,31 @@\n   const [message, setMessage] = useState(\"\");\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n-    try {\r\n-      await signInWithEmailAndPassword(auth, email, password);\r\n-      setMessage(\"Login successful!\");\r\n-    } catch (error) {\r\n-      setMessage(error.message);\r\n-    }\r\n+    const { error } = await supabase.auth.signInWithPassword({\r\n+      email,\r\n+      password,\r\n+    });\r\n+    if (error) setMessage(error.message);\r\n+    else setMessage(\"Logged in successfully!\");\r\n   };\r\n \r\n   const handleGoogleLogin = async () => {\r\n-    try {\r\n-      await signInWithPopup(auth, googleProvider);\r\n-      setMessage(\"Logged in with Google!\");\r\n-    } catch (error) {\r\n-      setMessage(error.message);\r\n-    }\r\n+    const { error } = await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n+    if (error) setMessage(error.message);\r\n   };\r\n \r\n-  const handleFacebookLogin = async () => {\r\n-    try {\r\n-      await signInWithPopup(auth, facebookProvider);\r\n-      setMessage(\"Logged in with Facebook!\");\r\n-    } catch (error) {\r\n-      setMessage(error.message);\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Login to Little Lemon</h2>\r\n       {message && <p className=\"message\">{message}</p>}\r\n       <form onSubmit={handleLogin}>\r\n-        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n-        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n+        <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\r\n+        <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n         <button type=\"submit\">Login</button>\r\n       </form>\r\n-\r\n       <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n-      <button className=\"facebook-btn\" onClick={handleFacebookLogin}>Login with Facebook</button>\r\n-\r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1739108966177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from \"react\";\r\n-import { supabase } from \"../../supabaseConfig\";\r\n+import { supabase } from \"../../../supabaseConfig\";\r\n import { Link } from \"react-router-dom\";\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n"
                },
                {
                    "date": 1739114621739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,44 @@\n import React, { useState } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link } from \"react-router-dom\";\r\n+import { FaCheckCircle } from \"react-icons/fa\"; // ✅ Import Green Tick Icon\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n+  const [showPopup, setShowPopup] = useState(false); // ✅ Track Popup State\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     const { error } = await supabase.auth.signInWithPassword({\r\n       email,\r\n       password,\r\n     });\r\n     if (error) setMessage(error.message);\r\n-    else setMessage(\"Logged in successfully!\");\r\n+    else {\r\n+        showSuccessPopup();\r\n   };\r\n \r\n   const handleGoogleLogin = async () => {\r\n     const { error } = await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n     if (error) setMessage(error.message);\r\n+    else {\r\n+        showSuccessPopup();\r\n+      }\r\n   };\r\n+  // ✅ Function to Show Success Popup & Redirect\r\n+  const showSuccessPopup = () => {\r\n+    setShowPopup(true);\r\n+    setTimeout(() => {\r\n+      setShowPopup(false);\r\n+      navigate(\"/\"); // Redirect after animation\r\n+    }, 3000);\r\n+  };\r\n \r\n+\r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Login to Little Lemon</h2>\r\n       {message && <p className=\"message\">{message}</p>}\r\n"
                },
                {
                    "date": 1739114669470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,15 @@\n         <button type=\"submit\">Login</button>\r\n       </form>\r\n       <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n+    {/* ✅ Success Popup */}\r\n+    {showPopup && (\r\n+        <div className=\"popup\">\r\n+          <FaCheckCircle className=\"check-icon\" />\r\n+          <p>Successfully Logged In!</p>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739114736841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,18 +46,20 @@\n         <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\r\n         <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n         <button type=\"submit\">Login</button>\r\n       </form>\r\n+\r\n       <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n+\r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n-    {/* ✅ Success Popup */}\r\n-    {showPopup && (\r\n+\r\n+      {/* ✅ Success Popup */}\r\n+      {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n           <p>Successfully Logged In!</p>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n };\r\n-\r\n export default Login;\r\n"
                },
                {
                    "date": 1739114818443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n   const [showPopup, setShowPopup] = useState(false); // ✅ Track Popup State\r\n+  const navigate = useNavigate();\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     const { error } = await supabase.auth.signInWithPassword({\r\n"
                },
                {
                    "date": 1739114832887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n-import { Link } from \"react-router-dom\";\r\n+import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\"; // ✅ Import Green Tick Icon\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n"
                },
                {
                    "date": 1739114840101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from \"react\";\r\n-import { supabase } from \"../../../supabaseConfig\";\r\n+import { supabase } from \"../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\"; // ✅ Import Green Tick Icon\r\n import \"./auth.css\";\r\n \r\n@@ -12,24 +12,27 @@\n   const navigate = useNavigate();\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n-    const { error } = await supabase.auth.signInWithPassword({\r\n-      email,\r\n-      password,\r\n-    });\r\n-    if (error) setMessage(error.message);\r\n-    else {\r\n-        showSuccessPopup();\r\n+    const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n+\r\n+    if (error) {\r\n+      setMessage(error.message);\r\n+    } else {\r\n+      showSuccessPopup();\r\n+    }\r\n   };\r\n \r\n   const handleGoogleLogin = async () => {\r\n     const { error } = await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n-    if (error) setMessage(error.message);\r\n-    else {\r\n-        showSuccessPopup();\r\n-      }\r\n+\r\n+    if (error) {\r\n+      setMessage(error.message);\r\n+    } else {\r\n+      showSuccessPopup();\r\n+    }\r\n   };\r\n+\r\n   // ✅ Function to Show Success Popup & Redirect\r\n   const showSuccessPopup = () => {\r\n     setShowPopup(true);\r\n     setTimeout(() => {\r\n@@ -37,9 +40,8 @@\n       navigate(\"/\"); // Redirect after animation\r\n     }, 3000);\r\n   };\r\n \r\n-\r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Login to Little Lemon</h2>\r\n       {message && <p className=\"message\">{message}</p>}\r\n@@ -62,5 +64,6 @@\n       )}\r\n     </div>\r\n   );\r\n };\r\n+\r\n export default Login;\r\n"
                },
                {
                    "date": 1739114857449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState } from \"react\";\r\n-import { supabase } from \"../../supabaseConfig\";\r\n+import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\"; // ✅ Import Green Tick Icon\r\n import \"./auth.css\";\r\n \r\n"
                },
                {
                    "date": 1739115022539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,29 @@\n-import React, { useState } from \"react\";\r\n-import { supabase } from \"../../../supabaseConfig\";\r\n+import React, { useState, useEffect } from \"react\";\r\n+import { supabase } from \"../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n-import { FaCheckCircle } from \"react-icons/fa\"; // ✅ Import Green Tick Icon\r\n+import { FaCheckCircle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n-  const [showPopup, setShowPopup] = useState(false); // ✅ Track Popup State\r\n+  const [showPopup, setShowPopup] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n+  useEffect(() => {\r\n+    // ✅ Detect if user is logged in after redirect\r\n+    const checkUser = async () => {\r\n+      const { data: user } = await supabase.auth.getUser();\r\n+      if (user?.user) {\r\n+        showSuccessPopup();\r\n+      }\r\n+    };\r\n+\r\n+    checkUser();\r\n+  }, []);\r\n+\r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n \r\n@@ -26,19 +38,17 @@\n     const { error } = await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n \r\n     if (error) {\r\n       setMessage(error.message);\r\n-    } else {\r\n-      showSuccessPopup();\r\n     }\r\n   };\r\n \r\n-  // ✅ Function to Show Success Popup & Redirect\r\n+  // ✅ Show Pop-up and Redirect after login\r\n   const showSuccessPopup = () => {\r\n     setShowPopup(true);\r\n     setTimeout(() => {\r\n       setShowPopup(false);\r\n-      navigate(\"/\"); // Redirect after animation\r\n+      navigate(\"/\");\r\n     }, 3000);\r\n   };\r\n \r\n   return (\r\n@@ -54,9 +64,9 @@\n       <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n \r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n \r\n-      {/* ✅ Success Popup */}\r\n+      {/* ✅ Show pop-up only after successful login */}\r\n       {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n           <p>Successfully Logged In!</p>\r\n"
                },
                {
                    "date": 1739115041136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n-import { supabase } from \"../../supabaseConfig\";\r\n+import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n"
                },
                {
                    "date": 1739115598567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n-import { supabase } from \"../../../supabaseConfig\";\r\n+import { supabase } from \"../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n@@ -11,17 +11,18 @@\n   const [showPopup, setShowPopup] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    // ✅ Detect if user is logged in after redirect\r\n-    const checkUser = async () => {\r\n-      const { data: user } = await supabase.auth.getUser();\r\n-      if (user?.user) {\r\n+    // ✅ Detect if the user logs in after redirect\r\n+    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\r\n+      if (event === \"SIGNED_IN\" && session) {\r\n         showSuccessPopup();\r\n       }\r\n+    });\r\n+\r\n+    return () => {\r\n+      authListener.subscription.unsubscribe();\r\n     };\r\n-\r\n-    checkUser();\r\n   }, []);\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n@@ -34,13 +35,10 @@\n     }\r\n   };\r\n \r\n   const handleGoogleLogin = async () => {\r\n-    const { error } = await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n-\r\n-    if (error) {\r\n-      setMessage(error.message);\r\n-    }\r\n+    await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n+    // ✅ No pop-up here; it will show after redirect\r\n   };\r\n \r\n   // ✅ Show Pop-up and Redirect after login\r\n   const showSuccessPopup = () => {\r\n"
                },
                {
                    "date": 1739115606165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n-import { supabase } from \"../../supabaseConfig\";\r\n+import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n"
                },
                {
                    "date": 1739115657045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     setShowPopup(true);\r\n     setTimeout(() => {\r\n       setShowPopup(false);\r\n       navigate(\"/\");\r\n-    }, 3000);\r\n+    }, 8000);\r\n   };\r\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n"
                },
                {
                    "date": 1739116185520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n-import { supabase } from \"../../../supabaseConfig\";\r\n+import { supabase } from \"../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n@@ -11,9 +11,9 @@\n   const [showPopup, setShowPopup] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n-    // ✅ Detect if the user logs in after redirect\r\n+    // ✅ Listen for auth state change after redirect\r\n     const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\r\n       if (event === \"SIGNED_IN\" && session) {\r\n         showSuccessPopup();\r\n       }\r\n@@ -36,18 +36,17 @@\n   };\r\n \r\n   const handleGoogleLogin = async () => {\r\n     await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n-    // ✅ No pop-up here; it will show after redirect\r\n   };\r\n \r\n-  // ✅ Show Pop-up and Redirect after login\r\n+  // ✅ Show pop-up in top-right and redirect after 3s\r\n   const showSuccessPopup = () => {\r\n     setShowPopup(true);\r\n     setTimeout(() => {\r\n       setShowPopup(false);\r\n       navigate(\"/\");\r\n-    }, 8000);\r\n+    }, 3000);\r\n   };\r\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n@@ -62,9 +61,9 @@\n       <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n \r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n \r\n-      {/* ✅ Show pop-up only after successful login */}\r\n+      {/* ✅ Notification appears only after successful login */}\r\n       {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n           <p>Successfully Logged In!</p>\r\n"
                },
                {
                    "date": 1739116192303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from \"react\";\r\n-import { supabase } from \"../../supabaseConfig\";\r\n+import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n"
                },
                {
                    "date": 1739120379445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n-import { FaCheckCircle } from \"react-icons/fa\";\r\n+import { FaCheckCircle, FaGoogle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n@@ -44,9 +44,9 @@\n     setShowPopup(true);\r\n     setTimeout(() => {\r\n       setShowPopup(false);\r\n       navigate(\"/\");\r\n-    }, 3000);\r\n+    }, 8000);\r\n   };\r\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n@@ -57,9 +57,9 @@\n         <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n         <button type=\"submit\">Login</button>\r\n       </form>\r\n \r\n-      <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n+      <button className=\"google-btn\" onClick={handleGoogleLogin}><fa icon={FaGoogle} className=\"google-icon\" />Continue with Google</button>\r\n \r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n \r\n       {/* ✅ Notification appears only after successful login */}\r\n"
                },
                {
                    "date": 1739120432504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n         <button type=\"submit\">Login</button>\r\n       </form>\r\n \r\n-      <button className=\"google-btn\" onClick={handleGoogleLogin}><fa icon={FaGoogle} className=\"google-icon\" />Continue with Google</button>\r\n+      <button className=\"google-btn\" onClick={handleGoogleLogin}><FaGoogle className=\"google-icon\" />Continue with Google</button>\r\n \r\n       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n \r\n       {/* ✅ Notification appears only after successful login */}\r\n"
                },
                {
                    "date": 1739122806124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,27 +8,40 @@\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n   const [showPopup, setShowPopup] = useState(false);\r\n+  const [text, setText] = useState(\"\");\r\n   const navigate = useNavigate();\r\n+  const fullText = \"Login or Sign Up\";\r\n \r\n   useEffect(() => {\r\n-    // ✅ Listen for auth state change after redirect\r\n+    const typingEffect = setInterval(() => {\r\n+      setText((prev) => {\r\n+        if (prev.length < fullText.length) {\r\n+          return fullText.slice(0, prev.length + 1);\r\n+        } else {\r\n+          clearInterval(typingEffect);\r\n+          return prev;\r\n+        }\r\n+      });\r\n+    }, 100);\r\n+    return () => clearInterval(typingEffect);\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n     const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\r\n       if (event === \"SIGNED_IN\" && session) {\r\n         showSuccessPopup();\r\n       }\r\n     });\r\n-\r\n     return () => {\r\n       authListener.subscription.unsubscribe();\r\n     };\r\n   }, []);\r\n \r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n-\r\n     if (error) {\r\n       setMessage(error.message);\r\n     } else {\r\n       showSuccessPopup();\r\n@@ -38,32 +51,27 @@\n   const handleGoogleLogin = async () => {\r\n     await supabase.auth.signInWithOAuth({ provider: \"google\" });\r\n   };\r\n \r\n-  // ✅ Show pop-up in top-right and redirect after 3s\r\n   const showSuccessPopup = () => {\r\n     setShowPopup(true);\r\n     setTimeout(() => {\r\n       setShowPopup(false);\r\n-      navigate(\"/\");\r\n-    }, 8000);\r\n+      navigate(\"/profile\");\r\n+    }, 3000);\r\n   };\r\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n-      <h2>Login to Little Lemon</h2>\r\n-      {message && <p className=\"message\">{message}</p>}\r\n-      <form onSubmit={handleLogin}>\r\n-        <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\r\n-        <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n-        <button type=\"submit\">Login</button>\r\n-      </form>\r\n-\r\n-      <button className=\"google-btn\" onClick={handleGoogleLogin}><FaGoogle className=\"google-icon\" />Continue with Google</button>\r\n-\r\n-      <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n-\r\n-      {/* ✅ Notification appears only after successful login */}\r\n+      <h2>Welcome to Little Lemon Restaurant</h2>\r\n+      <h3 className=\"typing-text\">{text}</h3>\r\n+      <div className=\"auth-buttons\">\r\n+        <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n+          <FaGoogle className=\"google-icon\" /> Continue with Google\r\n+        </button>\r\n+        <button className=\"auth-btn\" onClick={() => navigate(\"/signup\")}>Sign Up</button>\r\n+        <button className=\"auth-btn\" onClick={() => navigate(\"/login\")}>Login</button>\r\n+      </div>\r\n       {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n           <p>Successfully Logged In!</p>\r\n"
                },
                {
                    "date": 1739124182866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,21 +9,25 @@\n   const [password, setPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n   const [showPopup, setShowPopup] = useState(false);\r\n   const [text, setText] = useState(\"\");\r\n+  const [showLoginForm, setShowLoginForm] = useState(false);\r\n   const navigate = useNavigate();\r\n   const fullText = \"Login or Sign Up\";\r\n \r\n   useEffect(() => {\r\n+    let i = 0;\r\n+    let isAdding = true;\r\n     const typingEffect = setInterval(() => {\r\n-      setText((prev) => {\r\n-        if (prev.length < fullText.length) {\r\n-          return fullText.slice(0, prev.length + 1);\r\n-        } else {\r\n-          clearInterval(typingEffect);\r\n-          return prev;\r\n-        }\r\n-      });\r\n+      if (isAdding) {\r\n+        setText(fullText.slice(0, i + 1));\r\n+        i++;\r\n+        if (i === fullText.length) isAdding = false;\r\n+      } else {\r\n+        setText(fullText.slice(0, i - 1));\r\n+        i--;\r\n+        if (i === 0) isAdding = true;\r\n+      }\r\n     }, 100);\r\n     return () => clearInterval(typingEffect);\r\n   }, []);\r\n \r\n@@ -64,13 +68,26 @@\n     <div className=\"auth-container\">\r\n       <h2>Welcome to Little Lemon Restaurant</h2>\r\n       <h3 className=\"typing-text\">{text}</h3>\r\n       <div className=\"auth-buttons\">\r\n-        <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n-          <FaGoogle className=\"google-icon\" /> Continue with Google\r\n-        </button>\r\n-        <button className=\"auth-btn\" onClick={() => navigate(\"/signup\")}>Sign Up</button>\r\n-        <button className=\"auth-btn\" onClick={() => navigate(\"/login\")}>Login</button>\r\n+        {!showLoginForm ? (\r\n+          <>\r\n+            <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n+              <FaGoogle className=\"google-icon\" /> Continue with Google\r\n+            </button>\r\n+            <button className=\"auth-btn\" onClick={() => navigate(\"/signup\")}>Sign Up</button>\r\n+            <button className=\"auth-btn\" onClick={() => setShowLoginForm(true)}>Login</button>\r\n+          </>\r\n+        ) : (\r\n+          <>\r\n+            <form onSubmit={handleLogin} className=\"login-form\">\r\n+              <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\r\n+              <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required />\r\n+              <button type=\"submit\">Login</button>\r\n+              <button className=\"back-btn\" onClick={() => setShowLoginForm(false)}>Back</button>\r\n+            </form>\r\n+          </>\r\n+        )}\r\n       </div>\r\n       {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n"
                },
                {
                    "date": 1739125469753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,15 +20,22 @@\n     const typingEffect = setInterval(() => {\r\n       if (isAdding) {\r\n         setText(fullText.slice(0, i + 1));\r\n         i++;\r\n-        if (i === fullText.length) isAdding = false;\r\n+        if (i === fullText.length) {\r\n+          isAdding = false;\r\n+          setTimeout(() => {\r\n+            i--;\r\n+          }, 5000); // Pause for 5 seconds before deleting\r\n+        }\r\n       } else {\r\n         setText(fullText.slice(0, i - 1));\r\n         i--;\r\n-        if (i === 0) isAdding = true;\r\n+        if (i === 0) {\r\n+          isAdding = true;\r\n+        }\r\n       }\r\n-    }, 100);\r\n+    }, 200); // Slowed down the typing speed\r\n     return () => clearInterval(typingEffect);\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1739126411742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,38 +8,12 @@\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [message, setMessage] = useState(\"\");\r\n   const [showPopup, setShowPopup] = useState(false);\r\n-  const [text, setText] = useState(\"\");\r\n   const [showLoginForm, setShowLoginForm] = useState(false);\r\n   const navigate = useNavigate();\r\n-  const fullText = \"Login or Sign Up\";\r\n \r\n   useEffect(() => {\r\n-    let i = 0;\r\n-    let isAdding = true;\r\n-    const typingEffect = setInterval(() => {\r\n-      if (isAdding) {\r\n-        setText(fullText.slice(0, i + 1));\r\n-        i++;\r\n-        if (i === fullText.length) {\r\n-          isAdding = false;\r\n-          setTimeout(() => {\r\n-            i--;\r\n-          }, 5000); // Pause for 5 seconds before deleting\r\n-        }\r\n-      } else {\r\n-        setText(fullText.slice(0, i - 1));\r\n-        i--;\r\n-        if (i === 0) {\r\n-          isAdding = true;\r\n-        }\r\n-      }\r\n-    }, 200); // Slowed down the typing speed\r\n-    return () => clearInterval(typingEffect);\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n     const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\r\n       if (event === \"SIGNED_IN\" && session) {\r\n         showSuccessPopup();\r\n       }\r\n@@ -73,9 +47,9 @@\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Welcome to Little Lemon Restaurant</h2>\r\n-      <h3 className=\"typing-text\">{text}</h3>\r\n+      <h3 className=\"typing-text\"></h3>\r\n       <div className=\"auth-buttons\">\r\n         {!showLoginForm ? (\r\n           <>\r\n             <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n"
                },
                {
                    "date": 1739188194652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useState, useEffect } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle, FaGoogle } from \"react-icons/fa\";\r\n+import styled from 'styled-components';\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n@@ -47,9 +48,21 @@\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Welcome to Little Lemon Restaurant</h2>\r\n-      <h3 className=\"typing-text\"></h3>\r\n+       {/* 🔥 Animated Text Loader */}\r\n+       <StyledLoader>\r\n+        <div className=\"loader\">\r\n+          <p>Logging in</p>\r\n+          <div className=\"words\">\r\n+            <span className=\"word\">Verifying</span>\r\n+            <span className=\"word\">Authenticating</span>\r\n+            <span className=\"word\">Securing</span>\r\n+            <span className=\"word\">Redirecting</span>\r\n+            <span className=\"word\">Verifying</span>\r\n+          </div>\r\n+        </div>\r\n+      </StyledLoader>\r\n       <div className=\"auth-buttons\">\r\n         {!showLoginForm ? (\r\n           <>\r\n             <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n"
                },
                {
                    "date": 1739188427521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n-import React, { useState, useEffect } from \"react\";\r\n+import React, { useState } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle, FaGoogle } from \"react-icons/fa\";\r\n-import styled from 'styled-components';\r\n import \"./auth.css\";\r\n+import \"./loader.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n@@ -12,19 +12,8 @@\n   const [showPopup, setShowPopup] = useState(false);\r\n   const [showLoginForm, setShowLoginForm] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n-  useEffect(() => {\r\n-    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\r\n-      if (event === \"SIGNED_IN\" && session) {\r\n-        showSuccessPopup();\r\n-      }\r\n-    });\r\n-    return () => {\r\n-      authListener.subscription.unsubscribe();\r\n-    };\r\n-  }, []);\r\n-\r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n     if (error) {\r\n@@ -48,21 +37,21 @@\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Welcome to Little Lemon Restaurant</h2>\r\n-       {/* 🔥 Animated Text Loader */}\r\n-       <StyledLoader>\r\n-        <div className=\"loader\">\r\n-          <p>Logging in</p>\r\n-          <div className=\"words\">\r\n-            <span className=\"word\">Verifying</span>\r\n-            <span className=\"word\">Authenticating</span>\r\n-            <span className=\"word\">Securing</span>\r\n-            <span className=\"word\">Redirecting</span>\r\n-            <span className=\"word\">Verifying</span>\r\n-          </div>\r\n+      \r\n+      {/* 🔥 Animated Text Loader */}\r\n+      <div className=\"loader\">\r\n+        <p>Logging in</p>\r\n+        <div className=\"words\">\r\n+          <span className=\"word\">Verifying</span>\r\n+          <span className=\"word\">Authenticating</span>\r\n+          <span className=\"word\">Securing</span>\r\n+          <span className=\"word\">Redirecting</span>\r\n+          <span className=\"word\">Verifying</span>\r\n         </div>\r\n-      </StyledLoader>\r\n+      </div>\r\n+\r\n       <div className=\"auth-buttons\">\r\n         {!showLoginForm ? (\r\n           <>\r\n             <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n@@ -81,8 +70,9 @@\n             </form>\r\n           </>\r\n         )}\r\n       </div>\r\n+\r\n       {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n           <p>Successfully Logged In!</p>\r\n"
                },
                {
                    "date": 1739188658958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle, FaGoogle } from \"react-icons/fa\";\r\n import \"./auth.css\";\r\n-import \"./loader.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n"
                },
                {
                    "date": 1739188702866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle, FaGoogle } from \"react-icons/fa\";\r\n+import styled from 'styled-components';\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n@@ -11,8 +12,19 @@\n   const [showPopup, setShowPopup] = useState(false);\r\n   const [showLoginForm, setShowLoginForm] = useState(false);\r\n   const navigate = useNavigate();\r\n \r\n+  useEffect(() => {\r\n+    const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\r\n+      if (event === \"SIGNED_IN\" && session) {\r\n+        showSuccessPopup();\r\n+      }\r\n+    });\r\n+    return () => {\r\n+      authListener.subscription.unsubscribe();\r\n+    };\r\n+  }, []);\r\n+\r\n   const handleLogin = async (e) => {\r\n     e.preventDefault();\r\n     const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n     if (error) {\r\n@@ -36,21 +48,9 @@\n \r\n   return (\r\n     <div className=\"auth-container\">\r\n       <h2>Welcome to Little Lemon Restaurant</h2>\r\n-      \r\n-      {/* 🔥 Animated Text Loader */}\r\n-      <div className=\"loader\">\r\n-        <p>Logging in</p>\r\n-        <div className=\"words\">\r\n-          <span className=\"word\">Verifying</span>\r\n-          <span className=\"word\">Authenticating</span>\r\n-          <span className=\"word\">Securing</span>\r\n-          <span className=\"word\">Redirecting</span>\r\n-          <span className=\"word\">Verifying</span>\r\n-        </div>\r\n-      </div>\r\n-\r\n+      <h3 className=\"typing-text\"></h3>\r\n       <div className=\"auth-buttons\">\r\n         {!showLoginForm ? (\r\n           <>\r\n             <button className=\"google-btn\" onClick={handleGoogleLogin}>\r\n@@ -69,9 +69,8 @@\n             </form>\r\n           </>\r\n         )}\r\n       </div>\r\n-\r\n       {showPopup && (\r\n         <div className=\"popup\">\r\n           <FaCheckCircle className=\"check-icon\" />\r\n           <p>Successfully Logged In!</p>\r\n"
                },
                {
                    "date": 1739196422675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import React, { useState, useEffect } from \"react\";\r\n import { supabase } from \"../../../supabaseConfig\";\r\n import { Link, useNavigate } from \"react-router-dom\";\r\n import { FaCheckCircle, FaGoogle } from \"react-icons/fa\";\r\n-import styled from 'styled-components';\r\n import \"./auth.css\";\r\n \r\n const Login = () => {\r\n   const [email, setEmail] = useState(\"\");\r\n"
                }
            ],
            "date": 1739105034451,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth, googleProvider, facebookProvider } from \"../../firebaseConfig\";\r\nimport { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport \"./auth.css\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      setMessage(\"Login successful!\");\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      await signInWithPopup(auth, googleProvider);\r\n      setMessage(\"Logged in with Google!\");\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const handleFacebookLogin = async () => {\r\n    try {\r\n      await signInWithPopup(auth, facebookProvider);\r\n      setMessage(\"Logged in with Facebook!\");\r\n    } catch (error) {\r\n      setMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>Login to Little Lemon</h2>\r\n      {message && <p className=\"message\">{message}</p>}\r\n      <form onSubmit={handleLogin}>\r\n        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      <button className=\"google-btn\" onClick={handleGoogleLogin}>Login with Google</button>\r\n      <button className=\"facebook-btn\" onClick={handleFacebookLogin}>Login with Facebook</button>\r\n\r\n      <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"
        }
    ]
}