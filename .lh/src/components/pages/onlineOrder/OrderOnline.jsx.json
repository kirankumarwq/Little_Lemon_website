{
    "sourceFile": "src/components/pages/onlineOrder/OrderOnline.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 46,
            "patches": [
                {
                    "date": 1739394578618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739395143209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import { useCart } from \"../context/CartContext\";\r\n+import { useCart } from \"./CartContext\";\r\n // Import your menu items from your data file or define them inline\r\n import menuItems from \"../data/menuItems\"; \r\n import \"./orderOnline.css\";\r\n \r\n"
                },
                {
                    "date": 1739396656461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,49 @@\n-import React from \"react\";\r\n-import { useCart } from \"./CartContext\";\r\n-// Import your menu items from your data file or define them inline\r\n-import menuItems from \"../data/menuItems\"; \r\n+// src/components/pages/onlineOrder/OrderOnline.jsx\r\n+import React, { useState } from \"react\";\r\n+import { menuItems } from \"../../menu/menu\"; // Import menu items from menu.jsx\r\n+import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n-  const { addItem, totalPrice, cart } = useCart();\r\n+  const [cart, setCart] = useState([]);\r\n \r\n+  const addToCart = (item) => {\r\n+    setCart((prevCart) => {\r\n+      const existingItem = prevCart.find((cartItem) => cartItem.id === item.id);\r\n+      if (existingItem) {\r\n+        return prevCart.map((cartItem) =>\r\n+          cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\r\n+        );\r\n+      }\r\n+      return [...prevCart, { ...item, quantity: 1 }];\r\n+    });\r\n+  };\r\n+\r\n+  const removeFromCart = (id) => {\r\n+    setCart((prevCart) =>\r\n+      prevCart\r\n+        .map((item) => (item.id === id ? { ...item, quantity: item.quantity - 1 } : item))\r\n+        .filter((item) => item.quantity > 0)\r\n+    );\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"order-container\">\r\n-      <h1 className=\"page-title\">Order Online</h1>\r\n-      <div className=\"menu-grid\">\r\n+    <div className=\"order-online-container\">\r\n+      <div className=\"menu-list\">\r\n         {menuItems.map((item) => (\r\n-          <div key={item.id} className=\"menu-card\">\r\n+          <div key={item.id} className=\"menu-item\">\r\n             <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n             <div className=\"menu-details\">\r\n-              <h2 className=\"menu-name\">{item.name}</h2>\r\n-              <p className=\"menu-desc\">{item.description}</p>\r\n-              <div className=\"menu-footer\">\r\n-                <span className=\"menu-price\">${item.price.toFixed(2)}</span>\r\n-                <button className=\"add-btn\" onClick={() => addItem(item)}>\r\n-                  Add to Cart\r\n-                </button>\r\n-              </div>\r\n+              <h3>{item.name}</h3>\r\n+              <p>{item.description}</p>\r\n+              <span className=\"price\">${item.price.toFixed(2)}</span>\r\n+              <button onClick={() => addToCart(item)}>Add to Cart</button>\r\n             </div>\r\n           </div>\r\n         ))}\r\n       </div>\r\n-\r\n-      {/* Cart Summary (optional) */}\r\n-      {cart.length > 0 && (\r\n-        <div className=\"cart-summary\">\r\n-          <h2>Cart Summary</h2>\r\n-          <p>Total: ${totalPrice.toFixed(2)}</p>\r\n-          <a href=\"/checkout\" className=\"checkout-btn\">\r\n-            Checkout\r\n-          </a>\r\n-        </div>\r\n-      )}\r\n+      <Cart cart={cart} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739396786025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import { menuItems } from \"../../menu/menu\"; // Import menu items from menu.jsx\r\n+import { menuItems } from \"../menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739396800474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import { menuItems } from \"../menu/menu\"; // Import menu items from menu.jsx\r\n+import { menuItems } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739396850681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import { menuItems } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n+import { menuItems } from \"../Menu/Menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739396889309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import { menuItems } from \"../Menu/Menu\"; // Import menu items from menu.jsx\r\n+import { menuItems } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739396937526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import { menuItems } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n+import {menuData } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739396954593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+// src/components/pages/onlineOrder/OrderOnline.jsx\r\n+import React, { useState } from \"react\";\r\n+import {menuData } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n+import Cart from \"./Cart\";\r\n+import \"./orderOnline.css\";\r\n+\r\n+const OrderOnline = () => {\r\n+  const [cart, setCart] = useState([]);\r\n+\r\n+  const addToCart = (item) => {\r\n+    setCart((prevCart) => {\r\n+      const existingItem = prevCart.find((cartItem) => cartItem.id === item.id);\r\n+      if (existingItem) {\r\n+        return prevCart.map((cartItem) =>\r\n+          cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\r\n+        );\r\n+      }\r\n+      return [...prevCart, { ...item, quantity: 1 }];\r\n+    });\r\n+  };\r\n+\r\n+  const removeFromCart = (id) => {\r\n+    setCart((prevCart) =>\r\n+      prevCart\r\n+        .map((item) => (item.id === id ? { ...item, quantity: item.quantity - 1 } : item))\r\n+        .filter((item) => item.quantity > 0)\r\n+    );\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"order-online-container\">\r\n+      <div className=\"menu-list\">\r\n+        {menuItems.map((item) => (\r\n+          <div key={item.id} className=\"menu-item\">\r\n+            <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n+            <div className=\"menu-details\">\r\n+              <h3>{item.name}</h3>\r\n+              <p>{item.description}</p>\r\n+              <span className=\"price\">${item.price.toFixed(2)}</span>\r\n+              <button onClick={() => addToCart(item)}>Add to Cart</button>\r\n+            </div>\r\n+          </div>\r\n+        ))}\r\n+      </div>\r\n+      <Cart cart={cart} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default OrderOnline;\r\n"
                },
                {
                    "date": 1739396985409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \r\n   return (\r\n     <div className=\"order-online-container\">\r\n       <div className=\"menu-list\">\r\n-        {menuItems.map((item) => (\r\n+        {menuData.map((item) => (\r\n           <div key={item.id} className=\"menu-item\">\r\n             <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n             <div className=\"menu-details\">\r\n               <h3>{item.name}</h3>\r\n@@ -47,54 +47,4 @@\n   );\r\n };\r\n \r\n export default OrderOnline;\r\n-// src/components/pages/onlineOrder/OrderOnline.jsx\r\n-import React, { useState } from \"react\";\r\n-import {menuData } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n-import Cart from \"./Cart\";\r\n-import \"./orderOnline.css\";\r\n-\r\n-const OrderOnline = () => {\r\n-  const [cart, setCart] = useState([]);\r\n-\r\n-  const addToCart = (item) => {\r\n-    setCart((prevCart) => {\r\n-      const existingItem = prevCart.find((cartItem) => cartItem.id === item.id);\r\n-      if (existingItem) {\r\n-        return prevCart.map((cartItem) =>\r\n-          cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\r\n-        );\r\n-      }\r\n-      return [...prevCart, { ...item, quantity: 1 }];\r\n-    });\r\n-  };\r\n-\r\n-  const removeFromCart = (id) => {\r\n-    setCart((prevCart) =>\r\n-      prevCart\r\n-        .map((item) => (item.id === id ? { ...item, quantity: item.quantity - 1 } : item))\r\n-        .filter((item) => item.quantity > 0)\r\n-    );\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"order-online-container\">\r\n-      <div className=\"menu-list\">\r\n-        {menuItems.map((item) => (\r\n-          <div key={item.id} className=\"menu-item\">\r\n-            <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n-            <div className=\"menu-details\">\r\n-              <h3>{item.name}</h3>\r\n-              <p>{item.description}</p>\r\n-              <span className=\"price\">${item.price.toFixed(2)}</span>\r\n-              <button onClick={() => addToCart(item)}>Add to Cart</button>\r\n-            </div>\r\n-          </div>\r\n-        ))}\r\n-      </div>\r\n-      <Cart cart={cart} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default OrderOnline;\r\n"
                },
                {
                    "date": 1739397367065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import {menuData } from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n+import {menuData} from \"../Menu/Menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739397541937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import {menuData} from \"../Menu/Menu\"; // Import menu items from menu.jsx\r\n+import {menuData} from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739397814961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import {menuData} from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n+import menu  from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n@@ -29,9 +29,9 @@\n \r\n   return (\r\n     <div className=\"order-online-container\">\r\n       <div className=\"menu-list\">\r\n-        {menuData.map((item) => (\r\n+        {menu.map((item) => (\r\n           <div key={item.id} className=\"menu-item\">\r\n             <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n             <div className=\"menu-details\">\r\n               <h3>{item.name}</h3>\r\n"
                },
                {
                    "date": 1739397835651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/components/pages/onlineOrder/OrderOnline.jsx\r\n import React, { useState } from \"react\";\r\n-import menu  from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n+import menuData  from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n import Cart from \"./Cart\";\r\n import \"./orderOnline.css\";\r\n \r\n const OrderOnline = () => {\r\n"
                },
                {
                    "date": 1739397841929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \r\n   return (\r\n     <div className=\"order-online-container\">\r\n       <div className=\"menu-list\">\r\n-        {menu.map((item) => (\r\n+        {menuData.map((item) => (\r\n           <div key={item.id} className=\"menu-item\">\r\n             <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n             <div className=\"menu-details\">\r\n               <h3>{item.name}</h3>\r\n"
                },
                {
                    "date": 1739398049330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,38 @@\n-// src/components/pages/onlineOrder/OrderOnline.jsx\r\n-import React, { useState } from \"react\";\r\n-import menuData  from \"../Menu/menu\"; // Import menu items from menu.jsx\r\n-import Cart from \"./Cart\";\r\n-import \"./orderOnline.css\";\r\n+import React from \"react\";\r\n+import menuData from \"../Menu/menu\"; // ✅ Ensure correct import\r\n \r\n const OrderOnline = () => {\r\n-  const [cart, setCart] = useState([]);\r\n+  console.log(\"menuData:\", menuData); // ✅ Debugging\r\n \r\n-  const addToCart = (item) => {\r\n-    setCart((prevCart) => {\r\n-      const existingItem = prevCart.find((cartItem) => cartItem.id === item.id);\r\n-      if (existingItem) {\r\n-        return prevCart.map((cartItem) =>\r\n-          cartItem.id === item.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\r\n-        );\r\n-      }\r\n-      return [...prevCart, { ...item, quantity: 1 }];\r\n-    });\r\n-  };\r\n+  if (!Array.isArray(menuData)) {\r\n+    return <p>Error loading menu items.</p>; // Prevents crashes\r\n+  }\r\n \r\n-  const removeFromCart = (id) => {\r\n-    setCart((prevCart) =>\r\n-      prevCart\r\n-        .map((item) => (item.id === id ? { ...item, quantity: item.quantity - 1 } : item))\r\n-        .filter((item) => item.quantity > 0)\r\n-    );\r\n-  };\r\n+  return (\r\n+    <div className=\"order-online\">\r\n+      <h2>Order Online</h2>\r\n \r\n-  return (\r\n-    <div className=\"order-online-container\">\r\n-      <div className=\"menu-list\">\r\n-        {menuData.map((item) => (\r\n-          <div key={item.id} className=\"menu-item\">\r\n-            <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n-            <div className=\"menu-details\">\r\n-              <h3>{item.name}</h3>\r\n-              <p>{item.description}</p>\r\n-              <span className=\"price\">${item.price.toFixed(2)}</span>\r\n-              <button onClick={() => addToCart(item)}>Add to Cart</button>\r\n-            </div>\r\n+      {/* Loop through categories */}\r\n+      {menuData.map((categoryData, index) => (\r\n+        <div key={index} className=\"category-section\">\r\n+          <h3 className=\"category-title\">{categoryData.category}</h3>\r\n+\r\n+          {/* Loop through items inside the category */}\r\n+          <div className=\"menu-items\">\r\n+            {categoryData.items.map((item, itemIndex) => (\r\n+              <div key={itemIndex} className=\"menu-item\">\r\n+                <div className=\"item-details\">\r\n+                  <h4>{item.title}</h4>\r\n+                  <p>{item.desc}</p>\r\n+                  <p className=\"price\">${item.price.toFixed(2)}</p>\r\n+                </div>\r\n+                <button className=\"add-to-cart\">Add</button>\r\n+              </div>\r\n+            ))}\r\n           </div>\r\n-        ))}\r\n-      </div>\r\n-      <Cart cart={cart} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n+        </div>\r\n+      ))}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1739398325543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import menuData from \"../Menu/menu\"; // ✅ Ensure correct import\r\n+import {menuData} from \"../Menu/menu\"; // ✅ Ensure correct import\r\n \r\n const OrderOnline = () => {\r\n   console.log(\"menuData:\", menuData); // ✅ Debugging\r\n \r\n"
                },
                {
                    "date": 1739398366858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import {menuData} from \"../Menu/menu\"; // ✅ Ensure correct import\r\n+import {menuData} from \"./menu\"; // ✅ Ensure correct import\r\n \r\n const OrderOnline = () => {\r\n   console.log(\"menuData:\", menuData); // ✅ Debugging\r\n \r\n"
                },
                {
                    "date": 1739398373609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import {menuData} from \"./menu\"; // ✅ Ensure correct import\r\n+import {menuData} from \"../Menu/menu\"; // ✅ Ensure correct import\r\n \r\n const OrderOnline = () => {\r\n   console.log(\"menuData:\", menuData); // ✅ Debugging\r\n \r\n"
                },
                {
                    "date": 1739398548801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import {menuData} from \"../Menu/menu\"; // ✅ Ensure correct import\r\n+import {menuData} from \"./menu\"; // ✅ Ensure correct import\r\n \r\n const OrderOnline = () => {\r\n   console.log(\"menuData:\", menuData); // ✅ Debugging\r\n \r\n"
                },
                {
                    "date": 1739398782337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,27 @@\n import React from \"react\";\r\n-import {menuData} from \"./menu\"; // ✅ Ensure correct import\r\n+import { menuData } from \"./menu/menuData\"; // ✅ Import menu items\r\n \r\n const OrderOnline = () => {\r\n-  console.log(\"menuData:\", menuData); // ✅ Debugging\r\n-\r\n-  if (!Array.isArray(menuData)) {\r\n-    return <p>Error loading menu items.</p>; // Prevents crashes\r\n-  }\r\n-\r\n   return (\r\n-    <div className=\"order-online\">\r\n+    <div>\r\n       <h2>Order Online</h2>\r\n-\r\n-      {/* Loop through categories */}\r\n-      {menuData.map((categoryData, index) => (\r\n-        <div key={index} className=\"category-section\">\r\n-          <h3 className=\"category-title\">{categoryData.category}</h3>\r\n-\r\n-          {/* Loop through items inside the category */}\r\n-          <div className=\"menu-items\">\r\n-            {categoryData.items.map((item, itemIndex) => (\r\n-              <div key={itemIndex} className=\"menu-item\">\r\n-                <div className=\"item-details\">\r\n-                  <h4>{item.title}</h4>\r\n-                  <p>{item.desc}</p>\r\n-                  <p className=\"price\">${item.price.toFixed(2)}</p>\r\n-                </div>\r\n-                <button className=\"add-to-cart\">Add</button>\r\n-              </div>\r\n+      {menuData.map((category, index) => (\r\n+        <div key={index}>\r\n+          <h3>{category.category}</h3>\r\n+          <ul>\r\n+            {category.items.map((item, idx) => (\r\n+              <li key={idx}>\r\n+                <h4>{item.title}</h4>\r\n+                <p>{item.desc}</p>\r\n+                <p>${item.price.toFixed(2)}</p>\r\n+              </li>\r\n             ))}\r\n-          </div>\r\n+          </ul>\r\n         </div>\r\n       ))}\r\n     </div>\r\n   );\r\n };\r\n \r\n export default OrderOnline;\r\n+\r\n"
                },
                {
                    "date": 1739398791927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import { menuData } from \"./menu/menuData\"; // ✅ Import menu items\r\n+import { menuData } from \"./menuData\"; // ✅ Import menu items\r\n \r\n const OrderOnline = () => {\r\n   return (\r\n     <div>\r\n"
                },
                {
                    "date": 1739398803282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import { menuData } from \"./menuData\"; // ✅ Import menu items\r\n+import { menuData } from \"./menu\"; // ✅ Import menu items\r\n \r\n const OrderOnline = () => {\r\n   return (\r\n     <div>\r\n"
                },
                {
                    "date": 1739398986462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from \"react\";\r\n-import { menuData } from \"./menu\"; // ✅ Import menu items\r\n+import { menuData } from \"./menuData\"; // ✅ Import menu items\r\n \r\n const OrderOnline = () => {\r\n   return (\r\n     <div>\r\n"
                },
                {
                    "date": 1739399391790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,34 @@\n-import React from \"react\";\r\n+import React, { useState } from \"react\";\r\n import { menuData } from \"./menuData\"; // ✅ Import menu items\r\n \r\n const OrderOnline = () => {\r\n+  const [cart, setCart] = useState({}); // 🛒 Cart state (object to track items)\r\n+\r\n+  // ✅ Add item to cart or increase quantity\r\n+  const addToCart = (item) => {\r\n+    setCart((prevCart) => ({\r\n+      ...prevCart,\r\n+      [item.title]: prevCart[item.title] ? prevCart[item.title] + 1 : 1,\r\n+    }));\r\n+  };\r\n+\r\n+  // ✅ Decrease quantity or remove item\r\n+  const removeFromCart = (item) => {\r\n+    setCart((prevCart) => {\r\n+      const newCart = { ...prevCart };\r\n+      if (newCart[item.title] > 1) {\r\n+        newCart[item.title] -= 1;\r\n+      } else {\r\n+        delete newCart[item.title]; // Remove item if quantity is 0\r\n+      }\r\n+      return newCart;\r\n+    });\r\n+  };\r\n+\r\n+  // ✅ Calculate total items in cart\r\n+  const totalItems = Object.values(cart).reduce((acc, qty) => acc + qty, 0);\r\n+\r\n   return (\r\n     <div>\r\n       <h2>Order Online</h2>\r\n       {menuData.map((category, index) => (\r\n@@ -13,15 +39,47 @@\n               <li key={idx}>\r\n                 <h4>{item.title}</h4>\r\n                 <p>{item.desc}</p>\r\n                 <p>${item.price.toFixed(2)}</p>\r\n+                \r\n+                {/* 🛒 Add/Remove Buttons */}\r\n+                {cart[item.title] ? (\r\n+                  <div>\r\n+                    <button onClick={() => removeFromCart(item)}>➖</button>\r\n+                    <span>{cart[item.title]}</span>\r\n+                    <button onClick={() => addToCart(item)}>➕</button>\r\n+                  </div>\r\n+                ) : (\r\n+                  <button onClick={() => addToCart(item)}>Add to Cart</button>\r\n+                )}\r\n               </li>\r\n             ))}\r\n           </ul>\r\n         </div>\r\n       ))}\r\n+\r\n+      {/* 🛒 Sticky Cart Summary */}\r\n+      {totalItems > 0 && (\r\n+        <div style={styles.cartSummary}>\r\n+          <p>🛒 {totalItems} items in cart</p>\r\n+          <button>Checkout</button>\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n+// ✅ Basic Styles for Sticky Cart Summary\r\n+const styles = {\r\n+  cartSummary: {\r\n+    position: \"fixed\",\r\n+    bottom: \"0\",\r\n+    left: \"0\",\r\n+    width: \"100%\",\r\n+    background: \"black\",\r\n+    color: \"white\",\r\n+    textAlign: \"center\",\r\n+    padding: \"10px\",\r\n+  },\r\n+};\r\n+\r\n export default OrderOnline;\r\n-\r\n"
                },
                {
                    "date": 1739399553114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +1,57 @@\n import React, { useState } from \"react\";\r\n-import { menuData } from \"./menuData\"; // ✅ Import menu items\r\n+import { menuData } from \"./menuData\"; \r\n+import \"./OrderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n-  const [cart, setCart] = useState({}); // 🛒 Cart state (object to track items)\r\n+  const [cart, setCart] = useState({});\r\n \r\n-  // ✅ Add item to cart or increase quantity\r\n+  // ✅ Add item to cart\r\n   const addToCart = (item) => {\r\n     setCart((prevCart) => ({\r\n       ...prevCart,\r\n       [item.title]: prevCart[item.title] ? prevCart[item.title] + 1 : 1,\r\n     }));\r\n   };\r\n \r\n-  // ✅ Decrease quantity or remove item\r\n+  // ✅ Remove item or decrease quantity\r\n   const removeFromCart = (item) => {\r\n     setCart((prevCart) => {\r\n       const newCart = { ...prevCart };\r\n       if (newCart[item.title] > 1) {\r\n         newCart[item.title] -= 1;\r\n       } else {\r\n-        delete newCart[item.title]; // Remove item if quantity is 0\r\n+        delete newCart[item.title];\r\n       }\r\n       return newCart;\r\n     });\r\n   };\r\n \r\n-  // ✅ Calculate total items in cart\r\n+  // ✅ Get total items in cart\r\n   const totalItems = Object.values(cart).reduce((acc, qty) => acc + qty, 0);\r\n \r\n   return (\r\n-    <div>\r\n+    <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n       {menuData.map((category, index) => (\r\n-        <div key={index}>\r\n+        <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n             {category.items.map((item, idx) => (\r\n-              <li key={idx}>\r\n+              <li key={idx} className=\"menu-item\">\r\n                 <h4>{item.title}</h4>\r\n                 <p>{item.desc}</p>\r\n                 <p>${item.price.toFixed(2)}</p>\r\n-                \r\n+\r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cart[item.title] ? (\r\n-                  <div>\r\n+                  <div className=\"quantity-controls\">\r\n                     <button onClick={() => removeFromCart(item)}>➖</button>\r\n                     <span>{cart[item.title]}</span>\r\n                     <button onClick={() => addToCart(item)}>➕</button>\r\n                   </div>\r\n                 ) : (\r\n-                  <button onClick={() => addToCart(item)}>Add to Cart</button>\r\n+                  <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n                 )}\r\n               </li>\r\n             ))}\r\n           </ul>\r\n@@ -58,28 +59,14 @@\n       ))}\r\n \r\n       {/* 🛒 Sticky Cart Summary */}\r\n       {totalItems > 0 && (\r\n-        <div style={styles.cartSummary}>\r\n+        <div className=\"cart-summary\">\r\n           <p>🛒 {totalItems} items in cart</p>\r\n-          <button>Checkout</button>\r\n+          <button className=\"checkout-btn\">Checkout</button>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n };\r\n \r\n-// ✅ Basic Styles for Sticky Cart Summary\r\n-const styles = {\r\n-  cartSummary: {\r\n-    position: \"fixed\",\r\n-    bottom: \"0\",\r\n-    left: \"0\",\r\n-    width: \"100%\",\r\n-    background: \"black\",\r\n-    color: \"white\",\r\n-    textAlign: \"center\",\r\n-    padding: \"10px\",\r\n-  },\r\n-};\r\n-\r\n export default OrderOnline;\r\n"
                },
                {
                    "date": 1739399581151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from \"react\";\r\n import { menuData } from \"./menuData\"; \r\n-import \"./OrderOnline.css\"; // ✅ Import external CSS\r\n+import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n   const [cart, setCart] = useState({});\r\n \r\n"
                },
                {
                    "date": 1739400316720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,11 +44,11 @@\n \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cart[item.title] ? (\r\n                   <div className=\"quantity-controls\">\r\n-                    <button onClick={() => removeFromCart(item)}>➖</button>\r\n+                    <button onClick={() => removeFromCart(item)}>-</button>\r\n                     <span>{cart[item.title]}</span>\r\n-                    <button onClick={() => addToCart(item)}>➕</button>\r\n+                    <button onClick={() => addToCart(item)}>+</button>\r\n                   </div>\r\n                 ) : (\r\n                   <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n                 )}\r\n"
                },
                {
                    "date": 1739402573384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,45 @@\n-import React, { useState } from \"react\";\r\n-import { menuData } from \"./menuData\"; \r\n+import React from \"react\";\r\n+import { useCart } from \"../onlineOrder/CartContext\"; // ✅ Import CartContext\r\n+import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n-  const [cart, setCart] = useState({});\r\n+  const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n \r\n-  // ✅ Add item to cart\r\n+  // ✅ Add item to cart (updates global state)\r\n   const addToCart = (item) => {\r\n-    setCart((prevCart) => ({\r\n-      ...prevCart,\r\n-      [item.title]: prevCart[item.title] ? prevCart[item.title] + 1 : 1,\r\n-    }));\r\n+    const updatedCart = [...cartItems];\r\n+    const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n+\r\n+    if (existingItem) {\r\n+      existingItem.quantity += 1;\r\n+    } else {\r\n+      updatedCart.push({ ...item, quantity: 1 });\r\n+    }\r\n+\r\n+    setCartItems(updatedCart); // ✅ Updates global cart\r\n   };\r\n \r\n-  // ✅ Remove item or decrease quantity\r\n+  // ✅ Remove item from cart (updates global state)\r\n   const removeFromCart = (item) => {\r\n-    setCart((prevCart) => {\r\n-      const newCart = { ...prevCart };\r\n-      if (newCart[item.title] > 1) {\r\n-        newCart[item.title] -= 1;\r\n+    const updatedCart = [...cartItems];\r\n+    const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n+\r\n+    if (existingItem) {\r\n+      if (existingItem.quantity > 1) {\r\n+        existingItem.quantity -= 1;\r\n       } else {\r\n-        delete newCart[item.title];\r\n+        const index = updatedCart.indexOf(existingItem);\r\n+        updatedCart.splice(index, 1);\r\n       }\r\n-      return newCart;\r\n-    });\r\n+    }\r\n+\r\n+    setCartItems(updatedCart); // ✅ Updates global cart\r\n   };\r\n \r\n-  // ✅ Get total items in cart\r\n-  const totalItems = Object.values(cart).reduce((acc, qty) => acc + qty, 0);\r\n+  // ✅ Get total items in cart (real-time update)\r\n+  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n@@ -42,12 +53,12 @@\n                 <p>{item.desc}</p>\r\n                 <p>${item.price.toFixed(2)}</p>\r\n \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n-                {cart[item.title] ? (\r\n+                {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n                     <button onClick={() => removeFromCart(item)}>-</button>\r\n-                    <span>{cart[item.title]}</span>\r\n+                    <span>{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n                     <button onClick={() => addToCart(item)}>+</button>\r\n                   </div>\r\n                 ) : (\r\n                   <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n"
                },
                {
                    "date": 1739403897183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n-  const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n+  const { cartItems = [], setCartItems } = useCart(); // ✅ Provide default empty array\r\n \r\n   // ✅ Add item to cart (updates global state)\r\n   const addToCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n@@ -36,10 +36,10 @@\n \r\n     setCartItems(updatedCart); // ✅ Updates global cart\r\n   };\r\n \r\n-  // ✅ Get total items in cart (real-time update)\r\n-  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n+  // ✅ Prevent undefined error: Ensure cartItems is an array\r\n+  const totalItems = (cartItems || []).reduce((sum, item) => sum + item.quantity, 0);\r\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n"
                },
                {
                    "date": 1739404318679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n-  const { cartItems = [], setCartItems } = useCart(); // ✅ Provide default empty array\r\n+  const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n \r\n   // ✅ Add item to cart (updates global state)\r\n   const addToCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n@@ -36,10 +36,10 @@\n \r\n     setCartItems(updatedCart); // ✅ Updates global cart\r\n   };\r\n \r\n-  // ✅ Prevent undefined error: Ensure cartItems is an array\r\n-  const totalItems = (cartItems || []).reduce((sum, item) => sum + item.quantity, 0);\r\n+  // ✅ Get total items in cart (real-time update)\r\n+  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n@@ -48,18 +48,20 @@\n           <h3>{category.category}</h3>\r\n           <ul>\r\n             {category.items.map((item, idx) => (\r\n               <li key={idx} className=\"menu-item\">\r\n-                <h4>{item.title}</h4>\r\n-                <p>{item.desc}</p>\r\n-                <p>${item.price.toFixed(2)}</p>\r\n-\r\n+                <div className=\"menu-item-details\">\r\n+                  <h4>{item.title}</h4>\r\n+                  <p>{item.desc}</p>\r\n+                  <p className=\"menu-price\">${item.price.toFixed(2)}</p>\r\n+                </div>\r\n+                \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n-                    <button onClick={() => removeFromCart(item)}>-</button>\r\n-                    <span>{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n-                    <button onClick={() => addToCart(item)}>+</button>\r\n+                    <button className=\"quantity-btn\" onClick={() => removeFromCart(item)}>-</button>\r\n+                    <span className=\"quantity-count\">{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n+                    <button className=\"quantity-btn\" onClick={() => addToCart(item)}>+</button>\r\n                   </div>\r\n                 ) : (\r\n                   <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n                 )}\r\n"
                },
                {
                    "date": 1739404713062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,28 @@\n-import React from \"react\";\r\n+import React, { useState } from \"react\";\r\n import { useCart } from \"../onlineOrder/CartContext\"; // ✅ Import CartContext\r\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n   const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n+  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n+  const [priceRange, setPriceRange] = useState(\"All\");\r\n \r\n-  // ✅ Add item to cart (updates global state)\r\n+  // ✅ Filtered menu items based on category & price\r\n+  const filteredMenu = menuData\r\n+    .filter((category) => selectedCategory === \"All\" || category.category === selectedCategory)\r\n+    .map((category) => ({\r\n+      ...category,\r\n+      items: category.items.filter((item) => {\r\n+        if (priceRange === \"Below $10\") return item.price < 10;\r\n+        if (priceRange === \"$10 - $20\") return item.price >= 10 && item.price <= 20;\r\n+        if (priceRange === \"Above $20\") return item.price > 20;\r\n+        return true; // Default: Show all\r\n+      }),\r\n+    }));\r\n+\r\n+  // ✅ Add item to cart\r\n   const addToCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n     const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n \r\n@@ -16,12 +31,12 @@\n     } else {\r\n       updatedCart.push({ ...item, quantity: 1 });\r\n     }\r\n \r\n-    setCartItems(updatedCart); // ✅ Updates global cart\r\n+    setCartItems(updatedCart);\r\n   };\r\n \r\n-  // ✅ Remove item from cart (updates global state)\r\n+  // ✅ Remove item from cart\r\n   const removeFromCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n     const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n \r\n@@ -33,35 +48,52 @@\n         updatedCart.splice(index, 1);\r\n       }\r\n     }\r\n \r\n-    setCartItems(updatedCart); // ✅ Updates global cart\r\n+    setCartItems(updatedCart);\r\n   };\r\n \r\n-  // ✅ Get total items in cart (real-time update)\r\n+  // ✅ Get total items in cart\r\n   const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n-      {menuData.map((category, index) => (\r\n+\r\n+      {/* 🛠 Filters */}\r\n+      <div className=\"filters\">\r\n+        <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n+          <option value=\"All\">All Categories</option>\r\n+          {menuData.map((category, idx) => (\r\n+            <option key={idx} value={category.category}>{category.category}</option>\r\n+          ))}\r\n+        </select>\r\n+\r\n+        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n+          <option value=\"All\">All Prices</option>\r\n+          <option value=\"Below $10\">Below $10</option>\r\n+          <option value=\"$10 - $20\">$10 - $20</option>\r\n+          <option value=\"Above $20\">Above $20</option>\r\n+        </select>\r\n+      </div>\r\n+\r\n+      {/* 🍽 Filtered Menu Items */}\r\n+      {filteredMenu.map((category, index) => (\r\n         <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n             {category.items.map((item, idx) => (\r\n               <li key={idx} className=\"menu-item\">\r\n-                <div className=\"menu-item-details\">\r\n-                  <h4>{item.title}</h4>\r\n-                  <p>{item.desc}</p>\r\n-                  <p className=\"menu-price\">${item.price.toFixed(2)}</p>\r\n-                </div>\r\n-                \r\n+                <h4>{item.title}</h4>\r\n+                <p>{item.desc}</p>\r\n+                <p>${item.price.toFixed(2)}</p>\r\n+\r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n-                    <button className=\"quantity-btn\" onClick={() => removeFromCart(item)}>-</button>\r\n-                    <span className=\"quantity-count\">{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n-                    <button className=\"quantity-btn\" onClick={() => addToCart(item)}>+</button>\r\n+                    <button onClick={() => removeFromCart(item)}>-</button>\r\n+                    <span>{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n+                    <button onClick={() => addToCart(item)}>+</button>\r\n                   </div>\r\n                 ) : (\r\n                   <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n                 )}\r\n"
                },
                {
                    "date": 1739404848207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,13 @@\n-import React, { useState } from \"react\";\r\n+import React from \"react\";\r\n import { useCart } from \"../onlineOrder/CartContext\"; // ✅ Import CartContext\r\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n   const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n-  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n-  const [priceRange, setPriceRange] = useState(\"All\");\r\n \r\n-  // ✅ Filtered menu items based on category & price\r\n-  const filteredMenu = menuData\r\n-    .filter((category) => selectedCategory === \"All\" || category.category === selectedCategory)\r\n-    .map((category) => ({\r\n-      ...category,\r\n-      items: category.items.filter((item) => {\r\n-        if (priceRange === \"Below $10\") return item.price < 10;\r\n-        if (priceRange === \"$10 - $20\") return item.price >= 10 && item.price <= 20;\r\n-        if (priceRange === \"Above $20\") return item.price > 20;\r\n-        return true; // Default: Show all\r\n-      }),\r\n-    }));\r\n-\r\n-  // ✅ Add item to cart\r\n+  // ✅ Add item to cart (updates global state)\r\n   const addToCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n     const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n \r\n@@ -31,12 +16,12 @@\n     } else {\r\n       updatedCart.push({ ...item, quantity: 1 });\r\n     }\r\n \r\n-    setCartItems(updatedCart);\r\n+    setCartItems(updatedCart); // ✅ Updates global cart\r\n   };\r\n \r\n-  // ✅ Remove item from cart\r\n+  // ✅ Remove item from cart (updates global state)\r\n   const removeFromCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n     const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n \r\n@@ -48,52 +33,35 @@\n         updatedCart.splice(index, 1);\r\n       }\r\n     }\r\n \r\n-    setCartItems(updatedCart);\r\n+    setCartItems(updatedCart); // ✅ Updates global cart\r\n   };\r\n \r\n-  // ✅ Get total items in cart\r\n+  // ✅ Get total items in cart (real-time update)\r\n   const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n-\r\n-      {/* 🛠 Filters */}\r\n-      <div className=\"filters\">\r\n-        <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n-          <option value=\"All\">All Categories</option>\r\n-          {menuData.map((category, idx) => (\r\n-            <option key={idx} value={category.category}>{category.category}</option>\r\n-          ))}\r\n-        </select>\r\n-\r\n-        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n-          <option value=\"All\">All Prices</option>\r\n-          <option value=\"Below $10\">Below $10</option>\r\n-          <option value=\"$10 - $20\">$10 - $20</option>\r\n-          <option value=\"Above $20\">Above $20</option>\r\n-        </select>\r\n-      </div>\r\n-\r\n-      {/* 🍽 Filtered Menu Items */}\r\n-      {filteredMenu.map((category, index) => (\r\n+      {menuData.map((category, index) => (\r\n         <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n             {category.items.map((item, idx) => (\r\n               <li key={idx} className=\"menu-item\">\r\n-                <h4>{item.title}</h4>\r\n-                <p>{item.desc}</p>\r\n-                <p>${item.price.toFixed(2)}</p>\r\n-\r\n+                <div className=\"menu-item-details\">\r\n+                  <h4>{item.title}</h4>\r\n+                  <p>{item.desc}</p>\r\n+                  <p className=\"menu-price\">${item.price.toFixed(2)}</p>\r\n+                </div>\r\n+                \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n-                    <button onClick={() => removeFromCart(item)}>-</button>\r\n-                    <span>{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n-                    <button onClick={() => addToCart(item)}>+</button>\r\n+                    <button className=\"quantity-btn\" onClick={() => removeFromCart(item)}>-</button>\r\n+                    <span className=\"quantity-count\">{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n+                    <button className=\"quantity-btn\" onClick={() => addToCart(item)}>+</button>\r\n                   </div>\r\n                 ) : (\r\n                   <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n                 )}\r\n"
                },
                {
                    "date": 1739404900624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,22 @@\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n const OrderOnline = () => {\r\n   const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n-\r\n+  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n+  const [priceRange, setPriceRange] = useState(\"All\");\r\n+// ✅ Filtered menu items based on category & price\r\n+const filteredMenu = menuData\r\n+.filter((category) => selectedCategory === \"All\" || category.category === selectedCategory)\r\n+.map((category) => ({\r\n+  ...category,\r\n+  items: category.items.filter((item) => {\r\n+    if (priceRange === \"Below $10\") return item.price < 10;\r\n+    if (priceRange === \"$10 - $20\") return item.price >= 10 && item.price <= 20;\r\n+    if (priceRange === \"Above $20\") return item.price > 20;\r\n+    return true; // Default: Show all\r\n+  }),\r\n+}));\r\n   // ✅ Add item to cart (updates global state)\r\n   const addToCart = (item) => {\r\n     const updatedCart = [...cartItems];\r\n     const existingItem = updatedCart.find((cartItem) => cartItem.title === item.title);\r\n"
                },
                {
                    "date": 1739404952479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n const OrderOnline = () => {\r\n   const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n   const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n   const [priceRange, setPriceRange] = useState(\"All\");\r\n+\r\n // ✅ Filtered menu items based on category & price\r\n const filteredMenu = menuData\r\n .filter((category) => selectedCategory === \"All\" || category.category === selectedCategory)\r\n .map((category) => ({\r\n@@ -55,8 +56,24 @@\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n+        {/* 🛠 Filters */}\r\n+        <div className=\"filters\">\r\n+        <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n+          <option value=\"All\">All Categories</option>\r\n+          {menuData.map((category, idx) => (\r\n+            <option key={idx} value={category.category}>{category.category}</option>\r\n+          ))}\r\n+        </select>\r\n+\r\n+        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n+          <option value=\"All\">All Prices</option>\r\n+          <option value=\"Below $10\">Below $10</option>\r\n+          <option value=\"$10 - $20\">$10 - $20</option>\r\n+          <option value=\"Above $20\">Above $20</option>\r\n+        </select>\r\n+      </div>\r\n       {menuData.map((category, index) => (\r\n         <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n"
                },
                {
                    "date": 1739405159273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n         {/* 🛠 Filters */}\r\n-        <div className=\"filters\">\r\n+      <div className=\"filters\">\r\n         <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n           <option value=\"All\">All Categories</option>\r\n           {menuData.map((category, idx) => (\r\n             <option key={idx} value={category.category}>{category.category}</option>\r\n@@ -72,8 +72,9 @@\n           <option value=\"$10 - $20\">$10 - $20</option>\r\n           <option value=\"Above $20\">Above $20</option>\r\n         </select>\r\n       </div>\r\n+      \r\n       {menuData.map((category, index) => (\r\n         <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n@@ -83,9 +84,19 @@\n                   <h4>{item.title}</h4>\r\n                   <p>{item.desc}</p>\r\n                   <p className=\"menu-price\">${item.price.toFixed(2)}</p>\r\n                 </div>\r\n-                \r\n+      {/* 🍽 Filtered Menu Items */}\r\n+      {filteredMenu.map((category, index) => (\r\n+        <div key={index} className=\"menu-category\">\r\n+          <h3>{category.category}</h3>\r\n+          <ul>\r\n+            {category.items.map((item, idx) => (\r\n+              <li key={idx} className=\"menu-item\">\r\n+                <h4>{item.title}</h4>\r\n+                <p>{item.desc}</p>\r\n+                <p>${item.price.toFixed(2)}</p>\r\n+                          \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n                     <button className=\"quantity-btn\" onClick={() => removeFromCart(item)}>-</button>\r\n"
                },
                {
                    "date": 1739405186646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,19 +84,9 @@\n                   <h4>{item.title}</h4>\r\n                   <p>{item.desc}</p>\r\n                   <p className=\"menu-price\">${item.price.toFixed(2)}</p>\r\n                 </div>\r\n-      {/* 🍽 Filtered Menu Items */}\r\n-      {filteredMenu.map((category, index) => (\r\n-        <div key={index} className=\"menu-category\">\r\n-          <h3>{category.category}</h3>\r\n-          <ul>\r\n-            {category.items.map((item, idx) => (\r\n-              <li key={idx} className=\"menu-item\">\r\n-                <h4>{item.title}</h4>\r\n-                <p>{item.desc}</p>\r\n-                <p>${item.price.toFixed(2)}</p>\r\n-                          \r\n+                \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n                 {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n                     <button className=\"quantity-btn\" onClick={() => removeFromCart(item)}>-</button>\r\n"
                },
                {
                    "date": 1739405365294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,8 @@\n           <option value=\"$10 - $20\">$10 - $20</option>\r\n           <option value=\"Above $20\">Above $20</option>\r\n         </select>\r\n       </div>\r\n-      \r\n       {menuData.map((category, index) => (\r\n         <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n"
                },
                {
                    "date": 1739405569862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,9 @@\n \r\n   return (\r\n     <div className=\"order-container\">\r\n       <h2>Order Online</h2>\r\n+      \r\n         {/* 🛠 Filters */}\r\n       <div className=\"filters\">\r\n         <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n           <option value=\"All\">All Categories</option>\r\n@@ -72,9 +73,10 @@\n           <option value=\"$10 - $20\">$10 - $20</option>\r\n           <option value=\"Above $20\">Above $20</option>\r\n         </select>\r\n       </div>\r\n-      {menuData.map((category, index) => (\r\n+\r\n+      {filteredMenu.map((category, index) => (\r\n         <div key={index} className=\"menu-category\">\r\n           <h3>{category.category}</h3>\r\n           <ul>\r\n             {category.items.map((item, idx) => (\r\n"
                },
                {
                    "date": 1739405658129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from \"react\";\r\n+import React,{useState} from \"react\";\r\n import { useCart } from \"../onlineOrder/CartContext\"; // ✅ Import CartContext\r\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n \r\n"
                },
                {
                    "date": 1739406851650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,9 @@\n                   <p className=\"menu-price\">${item.price.toFixed(2)}</p>\r\n                 </div>\r\n                 \r\n                 {/* 🛒 Add/Remove Buttons */}\r\n+                <div>\r\n                 {cartItems.find((cartItem) => cartItem.title === item.title) ? (\r\n                   <div className=\"quantity-controls\">\r\n                     <button className=\"quantity-btn\" onClick={() => removeFromCart(item)}>-</button>\r\n                     <span className=\"quantity-count\">{cartItems.find((cartItem) => cartItem.title === item.title)?.quantity}</span>\r\n@@ -96,8 +97,9 @@\n                   </div>\r\n                 ) : (\r\n                   <button className=\"add-btn\" onClick={() => addToCart(item)}>Add to Cart</button>\r\n                 )}\r\n+                </div>\r\n               </li>\r\n             ))}\r\n           </ul>\r\n         </div>\r\n"
                },
                {
                    "date": 1739407370558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,8 +108,10 @@\n       {/* 🛒 Sticky Cart Summary */}\r\n       {totalItems > 0 && (\r\n         <div className=\"cart-summary\">\r\n           <p>🛒 {totalItems} items in cart</p>\r\n+          </div>\r\n+          </div>\r\n           <button className=\"checkout-btn\">Checkout</button>\r\n         </div>\r\n       )}\r\n     </div>\r\n"
                },
                {
                    "date": 1739407381405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,10 +108,8 @@\n       {/* 🛒 Sticky Cart Summary */}\r\n       {totalItems > 0 && (\r\n         <div className=\"cart-summary\">\r\n           <p>🛒 {totalItems} items in cart</p>\r\n-          </div>\r\n-          </div>\r\n           <button className=\"checkout-btn\">Checkout</button>\r\n         </div>\r\n       )}\r\n     </div>\r\n"
                },
                {
                    "date": 1739407449910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,10 +107,14 @@\n \r\n       {/* 🛒 Sticky Cart Summary */}\r\n       {totalItems > 0 && (\r\n         <div className=\"cart-summary\">\r\n+            <div>\r\n           <p>🛒 {totalItems} items in cart</p>\r\n+          </div>\r\n+          <div>\r\n           <button className=\"checkout-btn\">Checkout</button>\r\n+          </div>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1739407746904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n             <div>\r\n           <p>🛒 {totalItems} items in cart</p>\r\n           </div>\r\n           <div>\r\n-          <button className=\"checkout-btn\">Checkout</button>\r\n+          <button className=\"checkout-btn\" onClick={() => navigate(\"/checkout\")}> Checkout </button>\r\n           </div>\r\n         </div>\r\n       )}\r\n     </div>\r\n"
                },
                {
                    "date": 1739407828688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,13 @@\n import React,{useState} from \"react\";\r\n import { useCart } from \"../onlineOrder/CartContext\"; // ✅ Import CartContext\r\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n+import { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\r\n \r\n const OrderOnline = () => {\r\n+  const navigate = useNavigate(); // ✅ Define navigate\r\n+const OrderOnline = () => {\r\n   const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n   const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n   const [priceRange, setPriceRange] = useState(\"All\");\r\n \r\n"
                },
                {
                    "date": 1739407873177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,14 @@\n import { menuData } from \"./menuData\";\r\n import \"./orderOnline.css\"; // ✅ Import external CSS\r\n import { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\r\n \r\n+   // ✅ Define navigate\r\n const OrderOnline = () => {\r\n-  const navigate = useNavigate(); // ✅ Define navigate\r\n-const OrderOnline = () => {\r\n   const { cartItems, setCartItems } = useCart(); // ✅ Use global cart state\r\n   const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n   const [priceRange, setPriceRange] = useState(\"All\");\r\n+  const navigate = useNavigate();\r\n \r\n // ✅ Filtered menu items based on category & price\r\n const filteredMenu = menuData\r\n .filter((category) => selectedCategory === \"All\" || category.category === selectedCategory)\r\n"
                }
            ],
            "date": 1739394578618,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { useCart } from \"../context/CartContext\";\r\n// Import your menu items from your data file or define them inline\r\nimport menuItems from \"../data/menuItems\"; \r\nimport \"./orderOnline.css\";\r\n\r\nconst OrderOnline = () => {\r\n  const { addItem, totalPrice, cart } = useCart();\r\n\r\n  return (\r\n    <div className=\"order-container\">\r\n      <h1 className=\"page-title\">Order Online</h1>\r\n      <div className=\"menu-grid\">\r\n        {menuItems.map((item) => (\r\n          <div key={item.id} className=\"menu-card\">\r\n            <img src={item.image} alt={item.name} className=\"menu-image\" />\r\n            <div className=\"menu-details\">\r\n              <h2 className=\"menu-name\">{item.name}</h2>\r\n              <p className=\"menu-desc\">{item.description}</p>\r\n              <div className=\"menu-footer\">\r\n                <span className=\"menu-price\">${item.price.toFixed(2)}</span>\r\n                <button className=\"add-btn\" onClick={() => addItem(item)}>\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Cart Summary (optional) */}\r\n      {cart.length > 0 && (\r\n        <div className=\"cart-summary\">\r\n          <h2>Cart Summary</h2>\r\n          <p>Total: ${totalPrice.toFixed(2)}</p>\r\n          <a href=\"/checkout\" className=\"checkout-btn\">\r\n            Checkout\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderOnline;\r\n"
        }
    ]
}